
class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int n = nums.size(), l = 1, r = n-1;
        
        while(l <= r){
            int mid = l + (r-l)/2;
            int cnt = 0;
            
            for(auto num : nums) if(num <= mid) cnt++;
            
            if(cnt <= mid) l = mid+1;
            
            else r = mid-1;
        }
        
        return l;
    }
};
/*find duplicates
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int>result;
        int n = nums.size();
        for(int i=0; i<n; i++){
            int num =abs(nums[i]);
            int idx = num - 1;
            if(nums[idx] < 0)
                result.push_back(num);
            
            nums[idx] *= -1;
        }
        return result;
    }
};*/
